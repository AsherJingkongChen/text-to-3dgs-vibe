{
  "name": "commands",
  "description": "A definitive list of terminal commands the AI is permitted to execute. Each command includes a strict definition of its parameters.",
  "items": [
    {
      "name": "ls",
      "description": "Lists files and directories. Defaults to the current directory.",
      "parameters": [
        {
          "name": "path",
          "type": "string",
          "description": "The directory path to list.",
          "required": false
        },
        {
          "name": "recursive",
          "type": "boolean",
          "flag": "-R",
          "description": "Lists files in all subdirectories recursively.",
          "required": false
        }
      ],
      "examples": ["ls src", "ls -R"]
    },
    {
      "name": "cat",
      "description": "Displays the content of a file.",
      "parameters": [
        {
          "name": "file_path",
          "type": "string",
          "description": "The path to the file to be displayed.",
          "required": true
        }
      ],
      "examples": ["cat src/main.ts"]
    },
    {
      "name": "mkdir",
      "description": "Creates a new directory.",
      "parameters": [
        {
          "name": "directory_path",
          "type": "string",
          "description": "The path of the directory to create.",
          "required": true
        },
        {
          "name": "parents",
          "type": "boolean",
          "flag": "-p",
          "description": "Create parent directories as needed.",
          "required": false
        }
      ],
      "examples": ["mkdir src/shaders", "mkdir -p src/utils/math"]
    },
    {
      "name": "touch",
      "description": "Creates a new empty file.",
      "parameters": [
        {
          "name": "file_path",
          "type": "string",
          "description": "The path of the file to create.",
          "required": true
        }
      ],
      "examples": ["touch src/main.ts"]
    },
    {
      "name": "rm",
      "description": "Removes files or directories. Requires user confirmation before execution.",
      "parameters": [
        {
          "name": "path",
          "type": "string",
          "description": "The path to the file or directory to remove.",
          "required": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "flag": "-r",
          "description": "Required for removing directories.",
          "required": false
        }
      ],
      "examples": ["rm old_file.ts", "rm -r ./dist"]
    },
    {
      "name": "cp",
      "description": "Copies files or directories.",
      "parameters": [
        {
          "name": "source",
          "type": "string",
          "description": "The source file or directory path.",
          "required": true
        },
        {
          "name": "destination",
          "type": "string",
          "description": "The destination file or directory path.",
          "required": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "flag": "-r",
          "description": "Required for copying directories.",
          "required": false
        }
      ],
      "examples": ["cp -r src/assets dist/assets"]
    },
    {
      "name": "git",
      "description": "Version control operations. Primarily used for saving progress.",
      "parameters": [
        {
          "name": "subcommand",
          "type": "string",
          "description": "The git subcommand to run (e.g., add, commit).",
          "required": true
        },
        {
          "name": "arguments",
          "type": "string",
          "description": "Arguments for the subcommand.",
          "required": true
        }
      ],
      "examples": [
        "git add .",
        "git commit -m 'feat: Implement initial rendering pipeline'",
        "git reset HEAD^"
      ]
    },
    {
      "name": "cargo",
      "description": "Rust package manager commands. Used for managing Rust dependencies and building the project.",
      "parameters": [
        {
          "name": "subcommand",
          "type": "string",
          "description": "The cargo subcommand to run (e.g., build, run).",
          "required": true
        },
        {
          "name": "arguments",
          "type": "string",
          "description": "Arguments for the subcommand.",
          "required": false
        }
      ],
      "examples": [
        "cargo check",
        "cargo test",
        "cargo r --locked -p gausplat-scepter -- --help"
      ]
    }
  ]
}